/* Auto-incremented IDs are not recommended in YugabyteDB because they can introduce a bottleneck and may lower write concurrency by creating hotspots. 

Since auto-increment IDs are generated by using a single row in a system table that maintains the ID, the tablet hosting the row becomes a hotspot. Furthermore, auto-incremented IDs are logically close together and can end up writing to a set of few tablets (if table uses range sharding), thereby increasing contention and load on those tablets. 

A better way to get similar results is to use a Universally Unique IDentifier (UUID) column. A UUID does not introduce a single point of bottleneck, can be generated in the server or client and are uniformly distributed across tablets when inserting new rows. 

In the example below, we first create the extension pgcrypto which enables automatically generating UUID values with the gen_random_uuid() function and use it as the default value:
*/

\c ybu_exercises
CREATE EXTENSION IF NOT EXISTS pgcrypto;
DROP TABLE IF EXISTS users;
CREATE TABLE users(id uuid PRIMARY KEY DEFAULT gen_random_uuid(), name TEXT);
INSERT INTO users(name) VALUES ('luke'),('jake');
SELECT * FROM users;