Action-plan:

- Select a database on site 1 which will be used for clone test.
- Create a VM on secondary site which can be used as clone destination! When Clone is running execute
- Check if replication for the chosen TM is being replicated. If not change that. 
- Change TM so that a logcatchup is being executed every 5 minutus. 
era > time_machine update generate_input_file name="CDB01_TM" output_file=/home/era/JSON/update_TM.json
Change Logbackup interval
era > time_machine update name="CDB01_TM" input_file=/home/era/JSON/update_TM.json

- When VM provisioning is done autorise server to TM.
- Check DAM and replication of snapshots. 
- Create helptable and run bash job every minute. 

create table T_CONTROL (step number(10), when varchar2(25));
CREATE SEQUENCE CONTROL_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;


insert into T_CONTROL values (control_seq.nextval, to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'));
commit;

#! /bin/bash
. ~/.bash_profile
set -x
# for i in `cat /home/oracle/scripts/db_list.lst`
# ps -ef|grep -v grep|grep arc0|awk '{printf(substr($8,10)"\n")}' | while read DBSID
# do
#    echo $DBID
    export ORACLE_SID=$1
    export ORAENV_ASK=NO; . oraenv
    export DBNAME=`echo ${ORACLE_SID} | grep -E '^[A-Za-z]' | awk -F [1-9] '{print $1}'`
    echo ${DBNAME}
    export DBNAME=`${DBNAME} | awk '{print toupper($0)}'`
#    mkdir -p /u01/backup/${DBNAME}
sqlplus / as sysdba <<EOF
create table T_CONTROL (step number(10), when varchar2(25));
CREATE SEQUENCE CONTROL_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;
#insert into T_CONTROL values (control_seq.nextval, to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'));
#commit;
EOF
# done

Crontab
* * * * * bash /home/oracle/scripts/fill_T_CONTROL.sh CDB01


- check table. Step number and time
- Clone database on vm
- Check table
- Execute refresh of database
- Check table again